service: url-redirect

app: ziplink
org: ziplink

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  region: eu-west-2
  stage: ${opt:stage,'staging'}

  tags:
    APP: 'ziplink'
    ENV: ${sls:stage}

  stackTags:
    APP: 'ziplink'
  deploymentBucket:
    name: ziplink-app-serverless
    maxPreviousDeploymentArtifacts: ${self:custom.previous_deployments.${sls:stage}}
    blockPublicAccess: true

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Resource: '*'
          Action:
            - 'apigatewway:*'

plugins:
  - serverless-plugin-resource-tagging
  - serverless-python-requirements

package:
  individually: true

custom:
  stages:
    - local
    - staging
    - production
  pythonRequirements:
    layer: true
    slim: true
  env:
    local: 'local'
    staging: 'staging'
    production: 'production'
  previous_deployments:
    local: 0
    staging: 1
    production: 5
  db:
    local: 'DYNAMO_DB'
    staging: 'DYNAMO_DB'
    production: 'DYNAMO_DB'

functions:
  redirect-url:
    handler: apps.short_links.handlers.redirect_handler
    events:
      - httpApi:
          path: /{param}
          method: get
    package:
      # Directories and files to include in the deployed package
      patterns:
        - 'apps/redirect/**'
        - 'apps/common/**'
    layers:
      - Ref: PythonRequirementsLambdaLayer

  create-redirect-url:
    handler: apps.short_links.handlers.create_handler
    events:
      - httpApi:
          path: /
          method: post
    package:
      # Directories and files to include in the deployed package
      patterns:
        - 'apps/redirect/**'
        - 'apps/common/**'
    layers:
      - Ref: PythonRequirementsLambdaLayer

resources:
  - ${file(infrastructure/dynamodb_table.yml)}
  - ${file(infrastructure/api_gateway.yml)}
